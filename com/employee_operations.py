#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.13
# In conjunction with Tcl version 8.6
#    May 18, 2018 06:35:06 PM

import sys

try:
    from Tkinter import *
except ImportError:
    from Tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import Tkinter.ttk as ttk
    py3 = True

import employee_operations_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    root.resizable(0,0)
    top = employee_operations_Admin_ (root)
    employee_operations_support.init(root, top)
    root.mainloop()

w = None
def create_employee_operations_Admin_(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = employee_operations_Admin_ (w)
    employee_operations_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_employee_operations_Admin_():
    global w
    w.destroy()
    w = None


class employee_operations_Admin_:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font9 = "-family {Segoe UI Semibold} -size 11 -weight bold "  \
            "-slant roman -underline 0 -overstrike 0"

        top.geometry("696x481+650+150")
        top.title("employee_operations(Admin)")
        top.configure(background="#d9dbff")
        top.configure(highlightbackground="#f0f0f0")



        self.Canvas1 = Canvas(top)
        self.Canvas1.place(relx=0.07, rely=0.17, relheight=0.75, relwidth=0.85)
        self.Canvas1.configure(background="#f7faff")
        self.Canvas1.configure(borderwidth="6")
        self.Canvas1.configure(closeenough="4.0")
        self.Canvas1.configure(highlightbackground="#1c243a")
        self.Canvas1.configure(highlightcolor="#1a0c63")
        self.Canvas1.configure(insertbackground="black")
        self.Canvas1.configure(relief=RIDGE)
        self.Canvas1.configure(selectbackground="#c4c4c4")
        self.Canvas1.configure(selectforeground="black")
        self.Canvas1.configure(width=593)

        self.Add = Button(self.Canvas1)
        self.Add.place(relx=0.08, rely=0.22, height=42, width=153)
        self.Add.configure(activebackground="#d9d9d9")
        self.Add.configure(activeforeground="#000000")
        self.Add.configure(background="#b8cbff")
        self.Add.configure(command=employee_operations_support.add_book_details)
        self.Add.configure(disabledforeground="#a3a3a3")
        self.Add.configure(foreground="#000000")
        self.Add.configure(highlightbackground="#d9d9d9")
        self.Add.configure(highlightcolor="black")
        self.Add.configure(pady="0")
        self.Add.configure(text='''Add Book Details''')

        self.delete = Button(self.Canvas1)
        self.delete.place(relx=0.08, rely=0.47, height=42, width=219)
        self.delete.configure(activebackground="#d9d9d9")
        self.delete.configure(activeforeground="#000000")
        self.delete.configure(background="#b8cbff")
        self.delete.configure(command=employee_operations_support.delete_book)
        self.delete.configure(disabledforeground="#a3a3a3")
        self.delete.configure(foreground="#000000")
        self.delete.configure(highlightbackground="#d9d9d9")
        self.delete.configure(highlightcolor="black")
        self.delete.configure(pady="0")
        self.delete.configure(text='''Delete Book From Record''')

        self.view = Button(self.Canvas1)
        self.view.place(relx=0.08, rely=0.72, height=42, width=129)
        self.view.configure(activebackground="#d9d9d9")
        self.view.configure(activeforeground="#000000")
        self.view.configure(background="#b8cbff")
        self.view.configure(command=employee_operations_support.view_book_list)
        self.view.configure(disabledforeground="#a3a3a3")
        self.view.configure(foreground="#000000")
        self.view.configure(highlightbackground="#d9d9d9")
        self.view.configure(highlightcolor="black")
        self.view.configure(pady="0")
        self.view.configure(text='''View Book List''')

        self.search = Button(self.Canvas1)
        self.search.place(relx=0.62, rely=0.22, height=42, width=127)
        self.search.configure(activebackground="#d9d9d9")
        self.search.configure(activeforeground="#000000")
        self.search.configure(background="#b8cbff")
        self.search.configure(command=employee_operations_support.search_book)
        self.search.configure(disabledforeground="#a3a3a3")
        self.search.configure(foreground="#000000")
        self.search.configure(highlightbackground="#d9d9d9")
        self.search.configure(highlightcolor="black")
        self.search.configure(pady="0")
        self.search.configure(text='''Search a Book''')

        self.issue = Button(self.Canvas1)
        self.issue.place(relx=0.62, rely=0.47, height=42, width=190)
        self.issue.configure(activebackground="#d9d9d9")
        self.issue.configure(activeforeground="#000000")
        self.issue.configure(background="#b8cbff")
        self.issue.configure(command=employee_operations_support.issue_book)
        self.issue.configure(disabledforeground="#a3a3a3")
        self.issue.configure(foreground="#000000")
        self.issue.configure(highlightbackground="#d9d9d9")
        self.issue.configure(highlightcolor="black")
        self.issue.configure(pady="0")
        self.issue.configure(text='''Issue Book to Student''')

        self.reg_emp = Button(self.Canvas1)
        self.reg_emp.place(relx=0.62, rely=0.72, height=42, width=199)
        self.reg_emp.configure(activebackground="#d9d9d9")
        self.reg_emp.configure(activeforeground="#000000")
        self.reg_emp.configure(background="#b8cbff")
        self.reg_emp.configure(command=employee_operations_support.reg_new_emp)
        self.reg_emp.configure(disabledforeground="#a3a3a3")
        self.reg_emp.configure(foreground="#000000")
        self.reg_emp.configure(highlightbackground="#d9d9d9")
        self.reg_emp.configure(highlightcolor="black")
        self.reg_emp.configure(pady="0")
        self.reg_emp.configure(text='''Register new employee''')

        self.Label1 = Label(top)
        self.Label1.place(relx=0.09, rely=0.02, height=61, width=577)
        self.Label1.configure(background="#8099ff")
        self.Label1.configure(borderwidth="4")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font=font9)
        self.Label1.configure(foreground="#1b25b2")
        self.Label1.configure(text='''Select From the Menu''')
        self.Label1.configure(width=577)






if __name__ == '__main__':
    vp_start_gui()



